const LoadingScreen = () => {
  return (
    <section className="flex min-h-screen w-full items-center justify-center">
      <div className="flex flex-col items-center gap-4">
        <div
          id="animation"
          className="animation h-16"
          style={{ background: "transparent" } as React.CSSProperties}
        >
          <style>
            {`
              @keyframes draw {
                0% {
                  stroke-dasharray: 0, 4000;
                  stroke-dashoffset: 0;
                }
                45% {
                  stroke-dasharray: 4000, 0;
                  stroke-dashoffset: 0;
                }
                55% {
                  stroke-dasharray: 4000, 0;
                  stroke-dashoffset: 0;
                }
                100% {
                  stroke-dasharray: 0, 4000;
                  stroke-dashoffset: 4000;
                }
              }
        
              .animation path {
                animation: draw  1.5s ease-in-out infinite;
              }
            `}
          </style>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            xmlnsXlink="http://www.w3.org/1999/xlink"
            viewBox="0 0 1080 1080"
            width="1080"
            height="1080"
            style={{
              width: "100%",
              height: "100%",
              transform: "translate3d(0px, 0px, 0px)",
              contentVisibility: "visible",
            }}
            preserveAspectRatio="xMidYMid meet"
          >
            <defs>
              <clipPath id="__lottie_element_1046">
                <rect width="1080" height="1080" x="0" y="0"></rect>
              </clipPath>
            </defs>
            <g clipPath="url(#__lottie_element_1046)">
              <g
                style={{ display: "block" } as React.CSSProperties}
                transform="matrix(1,0,0,1,135.4320068359375,133.88900756835938)"
                opacity="1"
              >
                <g
                  opacity="1"
                  transform="matrix(1,0,0,1,404.5679931640625,406.1109924316406)"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    fillOpacity="0"
                    stroke="currentColor"
                    strokeOpacity="1"
                    strokeWidth="70"
                    d=" M-121.19100189208984,-112.03700256347656 C-121.19100189208984,-112.03700256347656 223.0449981689453,-112.03700256347656 223.0449981689453,-112.03700256347656 C284.63800048828125,-112.03700256347656 334.5679931640625,-162.197998046875 334.5679931640625,-224.07400512695312 C334.5679931640625,-285.95001220703125 284.63800048828125,-336.1109924316406 223.0449981689453,-336.1109924316406 C161.4530029296875,-336.1109924316406 111.52200317382812,-285.95001220703125 111.52200317382812,-224.07400512695312 C111.52200317382812,-224.07400512695312 111.52200317382812,224.07400512695312 111.52200317382812,224.07400512695312 C111.52200317382812,285.95001220703125 161.4530029296875,336.1109924316406 223.0449981689453,336.1109924316406 C284.63800048828125,336.1109924316406 334.5679931640625,285.95001220703125 334.5679931640625,224.07400512695312 C334.5679931640625,162.19700622558594 284.63800048828125,112.03700256347656 223.0449981689453,112.03700256347656 C223.0449981689453,112.03700256347656 -223.0449981689453,112.03700256347656 -223.0449981689453,112.03700256347656 C-284.63800048828125,112.03700256347656 -334.5679931640625,162.19700622558594 -334.5679931640625,224.07400512695312 C-334.5679931640625,285.95001220703125 -284.63800048828125,336.1109924316406 -223.0449981689453,336.1109924316406 C-161.4530029296875,336.1109924316406 -111.52300262451172,285.95001220703125 -111.52300262451172,224.07400512695312 C-111.52300262451172,224.07400512695312 -111.52300262451172,-224.07400512695312 -111.52300262451172,-224.07400512695312 C-111.52300262451172,-285.95001220703125 -161.4530029296875,-336.1109924316406 -223.0449981689453,-336.1109924316406 C-284.63800048828125,-336.1109924316406 -334.5679931640625,-285.95001220703125 -334.5679931640625,-224.07400512695312 C-334.5679931640625,-162.197998046875 -284.63800048828125,-112.03700256347656 -223.0449981689453,-112.03700256347656 C-223.0449981689453,-112.03700256347656 -125.16600036621094,-112.03700256347656 -125.16600036621094,-112.03700256347656"
                    className="stroke-black dark:stroke-white"
                  ></path>
                </g>
              </g>
              <g
                style={{ display: "block" } as React.CSSProperties}
                transform="matrix(1,0,0,1,135.4320068359375,133.88900756835938)"
                opacity="1"
              >
                <g
                  opacity="1"
                  transform="matrix(1,0,0,1,404.5679931640625,406.1109924316406)"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    fillOpacity="0"
                    stroke="currentColor"
                    strokeOpacity="1"
                    strokeWidth="70"
                    d=" M-111.52300262451172,85.25700378417969 C-111.52300262451172,-46.35100173950195 -111.52300262451172,-224.07400512695312 -111.52300262451172,-224.07400512695312 C-111.52300262451172,-285.95001220703125 -161.4530029296875,-336.1109924316406 -223.0449981689453,-336.1109924316406 C-284.63800048828125,-336.1109924316406 -334.5679931640625,-285.95001220703125 -334.5679931640625,-224.07400512695312 C-334.5679931640625,-162.197998046875 -284.63800048828125,-112.03700256347656 -223.0449981689453,-112.03700256347656 C-223.0449981689453,-112.03700256347656 -125.16600036621094,-112.03700256347656 -125.16600036621094,-112.03700256347656"
                    className="stroke-black dark:stroke-white"
                  ></path>
                </g>
              </g>
            </g>
          </svg>
        </div>
      </div>
    </section>
  );
};

export default LoadingScreen;
